// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.kotlin.user.presenter;

import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;

public final class RegisterPresenter_Factory implements Factory<RegisterPresenter> {
  private final MembersInjector<RegisterPresenter> registerPresenterMembersInjector;

  public RegisterPresenter_Factory(
      MembersInjector<RegisterPresenter> registerPresenterMembersInjector) {
    assert registerPresenterMembersInjector != null;
    this.registerPresenterMembersInjector = registerPresenterMembersInjector;
  }

  @Override
  public RegisterPresenter get() {
    return MembersInjectors.injectMembers(
        registerPresenterMembersInjector, new RegisterPresenter());
  }

  public static Factory<RegisterPresenter> create(
      MembersInjector<RegisterPresenter> registerPresenterMembersInjector) {
    return new RegisterPresenter_Factory(registerPresenterMembersInjector);
  }
}
