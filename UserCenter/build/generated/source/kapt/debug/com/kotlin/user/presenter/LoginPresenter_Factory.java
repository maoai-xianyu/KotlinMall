// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.kotlin.user.presenter;

import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;

public final class LoginPresenter_Factory implements Factory<LoginPresenter> {
  private final MembersInjector<LoginPresenter> loginPresenterMembersInjector;

  public LoginPresenter_Factory(MembersInjector<LoginPresenter> loginPresenterMembersInjector) {
    assert loginPresenterMembersInjector != null;
    this.loginPresenterMembersInjector = loginPresenterMembersInjector;
  }

  @Override
  public LoginPresenter get() {
    return MembersInjectors.injectMembers(loginPresenterMembersInjector, new LoginPresenter());
  }

  public static Factory<LoginPresenter> create(
      MembersInjector<LoginPresenter> loginPresenterMembersInjector) {
    return new LoginPresenter_Factory(loginPresenterMembersInjector);
  }
}
