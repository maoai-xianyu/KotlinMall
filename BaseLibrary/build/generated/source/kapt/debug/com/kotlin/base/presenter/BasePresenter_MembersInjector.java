// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.kotlin.base.presenter;

import android.content.Context;
import com.kotlin.base.presenter.view.BaseView;
import com.trello.rxlifecycle.LifecycleProvider;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class BasePresenter_MembersInjector<T extends BaseView>
    implements MembersInjector<BasePresenter<T>> {
  private final Provider<LifecycleProvider<?>> lifecycleProvider;

  private final Provider<Context> contextProvider;

  public BasePresenter_MembersInjector(
      Provider<LifecycleProvider<?>> lifecycleProvider, Provider<Context> contextProvider) {
    assert lifecycleProvider != null;
    this.lifecycleProvider = lifecycleProvider;
    assert contextProvider != null;
    this.contextProvider = contextProvider;
  }

  public static <T extends BaseView> MembersInjector<BasePresenter<T>> create(
      Provider<LifecycleProvider<?>> lifecycleProvider, Provider<Context> contextProvider) {
    return new BasePresenter_MembersInjector<T>(lifecycleProvider, contextProvider);
  }

  @Override
  public void injectMembers(BasePresenter<T> instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.lifecycleProvider = lifecycleProvider.get();
    instance.context = contextProvider.get();
  }
}
