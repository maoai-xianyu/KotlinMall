// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.kotlin.order.presenter;

import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;

public final class ShipAddressPresenter_Factory implements Factory<ShipAddressPresenter> {
  private final MembersInjector<ShipAddressPresenter> shipAddressPresenterMembersInjector;

  public ShipAddressPresenter_Factory(
      MembersInjector<ShipAddressPresenter> shipAddressPresenterMembersInjector) {
    assert shipAddressPresenterMembersInjector != null;
    this.shipAddressPresenterMembersInjector = shipAddressPresenterMembersInjector;
  }

  @Override
  public ShipAddressPresenter get() {
    return MembersInjectors.injectMembers(
        shipAddressPresenterMembersInjector, new ShipAddressPresenter());
  }

  public static Factory<ShipAddressPresenter> create(
      MembersInjector<ShipAddressPresenter> shipAddressPresenterMembersInjector) {
    return new ShipAddressPresenter_Factory(shipAddressPresenterMembersInjector);
  }
}
